clustering {
  ip = "127.0.0.1"
  port = 3393
}

akka {
  system-name = "server-system"
  loglevel = "INFO"
  actor {
    provider = "cluster"
    askTimeout = 20
    serializers {
      //      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
      "com.eycads.sdk.protocols.MessageProtocol" = proto
    }
  }
  remote.artery {
    canonical {
      hostname = ${clustering.ip}
      port = ${clustering.port}
    }
  }
  cluster {
    roles = ["AccountEntityRole", "UniqueAccountNameActorRole", "UniqueUserNameActorRole","UserEntityRole"]
    failure-detector.acceptable-heartbeat-pause = 8s
    seed-nodes = [
      "akka://"${akka.system-name}"@"${clustering.ip}":3393"
    ]
    sharding {
//      role = "AccountEntityRole"
      number-of-shards = 100
    }
  }

  persistence {
    journal {
      plugin = "akka.persistence.cassandra.journal"
    }
    snapshot-store {
      plugin = "akka.persistence.cassandra.snapshot"
    }
    journal-plugin-fallback {
      replay-filter {
        debug = on
      }
    }
    cassandra {
      journal {
        keyspace-autocreate = true
        tables-autocreate = true
        keyspace = "alona"
      }
      snapshot {
        keyspace-autocreate = true
        tables-autocreate = true
        keyspace = "alona"
      }
    }
  }

  cassandra-journal {
    contact-points = ["cassandra.local"]
    port = 9042
    //  authentication.username = "cassandra"
    //  authentication.password = "cassandra"
    keyspace = "alonaTest"
  }

}

datastax-java-driver {
  basic.contact-points = ["cassandra.local"]
}
